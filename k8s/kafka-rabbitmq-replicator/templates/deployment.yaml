{{- if .Values.replication.kafkaToRabbitmq.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kafka-rabbitmq-replicator.fullname" . }}-k2r
  labels:
    {{- include "kafka-rabbitmq-replicator.labels" . | nindent 4 }}
    component: kafka-to-rabbitmq
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "kafka-rabbitmq-replicator.selectorLabels" . | nindent 6 }}
      {{- include "kafka-rabbitmq-replicator.istioLabels" . | nindent 6 }}
      component: kafka-to-rabbitmq
  template:
    metadata:
      labels:
        {{- include "kafka-rabbitmq-replicator.selectorLabels" . | nindent 8 }}
        {{- include "kafka-rabbitmq-replicator.istioLabels" . | nindent 8 }}
        component: kafka-to-rabbitmq
    spec:
      containers:
      - name: replicator
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        - /bin/bash
        - -c
        - |
          pip install kafka-python pika
          python /app/replicator.py K2R
        env:
        - name: KAFKA_BOOTSTRAP_SERVERS
          value: {{ .Values.kafka.bootstrapServers | quote }}
        - name: RABBITMQ_HOST
          value: {{ .Values.rabbitmq.host | quote }}
        - name: RABBITMQ_PORT
          value: {{ .Values.rabbitmq.port | quote }}
        - name: RABBITMQ_USERNAME
          value: {{ .Values.rabbitmq.username | quote }}
        - name: RABBITMQ_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.rabbitmq.secretName | default "rabbitmq" }}
              key: {{ .Values.rabbitmq.secretKey | default "rabbitmq-password" }}
        - name: RABBITMQ_VHOST
          value: {{ .Values.rabbitmq.vhost | quote }}
        # Consumer group not needed for K2R (manual assignment)
        - name: REPLICATION_MAPPINGS
          value: {{ .Values.replication.kafkaToRabbitmq.mappings | toJson | quote }}
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        volumeMounts:
        - name: script
          mountPath: /app
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        {{- if .Values.healthCheck.enabled }}
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: {{ .Values.healthCheck.initialDelaySeconds }}
          periodSeconds: {{ .Values.healthCheck.periodSeconds }}
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: {{ .Values.healthCheck.initialDelaySeconds }}
          periodSeconds: {{ .Values.healthCheck.periodSeconds }}
        {{- end }}
      volumes:
      - name: script
        configMap:
          name: {{ include "kafka-rabbitmq-replicator.fullname" . }}-script
          defaultMode: 0755
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
{{- end }}
{{- if .Values.replication.rabbitmqToKafka.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kafka-rabbitmq-replicator.fullname" . }}-r2k
  labels:
    {{- include "kafka-rabbitmq-replicator.labels" . | nindent 4 }}
    component: rabbitmq-to-kafka
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "kafka-rabbitmq-replicator.selectorLabels" . | nindent 6 }}
      {{- include "kafka-rabbitmq-replicator.istioLabels" . | nindent 6 }}
      component: rabbitmq-to-kafka
  template:
    metadata:
      labels:
        {{- include "kafka-rabbitmq-replicator.selectorLabels" . | nindent 8 }}
        {{- include "kafka-rabbitmq-replicator.istioLabels" . | nindent 8 }}
        component: rabbitmq-to-kafka
    spec:
      containers:
      - name: replicator
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        - /bin/bash
        - -c
        - |
          pip install kafka-python pika
          python /app/replicator.py R2K
        env:
        - name: KAFKA_BOOTSTRAP_SERVERS
          value: {{ .Values.kafka.bootstrapServers | quote }}
        - name: RABBITMQ_HOST
          value: {{ .Values.rabbitmq.host | quote }}
        - name: RABBITMQ_PORT
          value: {{ .Values.rabbitmq.port | quote }}
        - name: RABBITMQ_USERNAME
          value: {{ .Values.rabbitmq.username | quote }}
        - name: RABBITMQ_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.rabbitmq.secretName | default "rabbitmq" }}
              key: {{ .Values.rabbitmq.secretKey | default "rabbitmq-password" }}
        - name: RABBITMQ_VHOST
          value: {{ .Values.rabbitmq.vhost | quote }}
        - name: CONSUMER_GROUP
          value: {{ .Values.consumerGroup.rabbitmqToKafka | quote }}
        - name: REPLICATION_MAPPINGS
          value: {{ .Values.replication.rabbitmqToKafka.mappings | toJson | quote }}
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        volumeMounts:
        - name: script
          mountPath: /app
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        {{- if .Values.healthCheck.enabled }}
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: {{ .Values.healthCheck.initialDelaySeconds }}
          periodSeconds: {{ .Values.healthCheck.periodSeconds }}
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: {{ .Values.healthCheck.initialDelaySeconds }}
          periodSeconds: {{ .Values.healthCheck.periodSeconds }}
        {{- end }}
      volumes:
      - name: script
        configMap:
          name: {{ include "kafka-rabbitmq-replicator.fullname" . }}-script
          defaultMode: 0755
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}