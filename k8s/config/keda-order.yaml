# ============================================================================
# KEDA CONFIGURACIÓN MÍNIMA PARA ORDER MANAGEMENT
# ============================================================================
# Esta configuración implementa KEDA sin modificar NADA del proyecto existente
# 
# CARACTERÍSTICAS:
# - Usa la configuración actual de RabbitMQ sin cambios
# - No modifica ningún deployment existente
# - Solo añade escalado automático basado en cola de mensajes
# - Configuración completamente independiente
#
# INSTALACIÓN:
# kubectl apply -f k8s/config/keda-order-management-minimal.yaml
#
# DESINSTALACIÓN (si no funciona):
# kubectl delete -f k8s/config/keda-order-management-minimal.yaml
# ============================================================================
apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: mqtt-order-event-client-scaler
  namespace: medisupply
  labels:
    app: mqtt-order-event-client
    component: autoscaler
spec:
  scaleTargetRef:
    name: mqtt-order-event-client
  minReplicaCount: 1
  maxReplicaCount: 3
  pollingInterval: 60
  cooldownPeriod: 300
  triggers:
  - type: kafka
    metadata:
      bootstrapServers: kafka.medisupply.svc.cluster.local:9092
      consumerGroup: mqtt-order-event-client-group
      topic: events-order
      lagThreshold: '0'
      offsetResetPolicy: latest
      allowIdleConsumers: 'false'
 