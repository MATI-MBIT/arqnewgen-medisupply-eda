# Configuración para el cluster Kafka Warehouse
controller:
  replicaCount: 1

# Usar la misma configuración de listeners que el Kafka principal
listeners:
  client:
    protocol: PLAINTEXT
  controller:
    protocol: PLAINTEXT
  interbroker:
    protocol: PLAINTEXT

auth:
  clientProtocol: plaintext
  interBrokerProtocol: plaintext
  sasl:
    enabledMechanisms: ""

# La parte más importante: Lo que Kafka anuncia a los clientes
advertisedListeners:
  # Anuncia el DNS interno de K8s para los clientes que se conectan al puerto 9092
  - name: internal
    # IMPORTANTE: Reemplaza esto con el nombre de tu release y namespace
    # Formato: <nombre-release>-kafka-<id-broker>.<nombre-release>-kafka-headless.<namespace>.svc.cluster.local:9092
    # Bitnami lo genera automáticamente si usas esta plantilla:
    domain: "{{ .Release.Name }}-kafka-headless.{{ .Release.Namespace }}.svc.cluster.local"
    port: 9092
    protocol: PLAINTEXT

# Mapeo de protocolos
protocolMap: "internal:PLAINTEXT,controller:PLAINTEXT"
  
# Qué listener deben usar los brokers para hablar entre ellos
interBrokerListener: "internal"

overrideConfiguration:
  offsets.topic.replication.factor: 1
  transaction.state.log.replication.factor: 1

persistence:
  enabled: false

metrics:
  jmx:
    enabled: false
  serviceMonitor:
    enabled: false

# Configuración de nombre para evitar conflictos con el Kafka principal
nameOverride: "kafka-warehouse"
fullnameOverride: "kafka-warehouse"

# Labels para identificación
commonLabels:
  app.kubernetes.io/instance: kafka-warehouse
  app.kubernetes.io/component: kafka-warehouse
