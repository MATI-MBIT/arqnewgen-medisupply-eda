# ============================================================================
# CONFIGURACIÓN PARA MQTT EVENT GENERATOR
# ============================================================================
# Este archivo replica exactamente la configuración del chart original mqtt-event-generator
# 
# VARIABLES DE ENTORNO GENERADAS:
# - MQTT_BROKER: tcp://emqx.medilogistic.svc.cluster.local:1883
# - MQTT_CLIENT_ID: event-generator-k8s-{release-name}
# - MQTT_TOPIC: events/sensor
# - MQTT_USERNAME: admin
# - MQTT_PASSWORD: public
# - EVENT_INTERVAL_SECONDS: 30
# - POD_NAME: {metadata.name}
# - POD_NAMESPACE: {metadata.namespace}
#
# INSTALACIÓN:
# helm install mqtt-event-generator ./k8s/microservice -f config/mqtt-event-generator-values.yaml
#
# ACTUALIZACIÓN:
# helm upgrade mqtt-event-generator ./k8s/microservice -f config/mqtt-event-generator-values.yaml
# ============================================================================

# Configuración básica del deployment
replicaCount: 1

# Configuración de la imagen Docker
image:
  repository: mqtt-event-generator
  pullPolicy: IfNotPresent
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# Configuración del servicio Kubernetes
service:
  type: ClusterIP
  port: 8080
  targetPort: 8080

# ============================================================================
# CONFIGURACIÓN MQTT
# ============================================================================
mqtt:
  enabled: true
  # EMQX service name in the same namespace
  broker: "tcp://emqx.medilogistic.svc.cluster.local:1883"
  clientId: "event-generator-k8s"
  topic: "events/sensor"
  # Default EMQX credentials (should match emqx chart values)
  username: "admin"
  password: "public"

# ============================================================================
# CONFIGURACIÓN ESPECÍFICA DE LA APLICACIÓN
# ============================================================================
# Estas variables se convierten en variables de entorno
app:
  config:
    # Intervalo en segundos para generar eventos
    EVENT_INTERVAL_SECONDS: "1"

# ============================================================================
# CONFIGURACIÓN DE KUBERNETES
# ============================================================================
serviceAccount:
  create: true
  annotations: {}
  name: ""

# Anotaciones del pod (Istio habilitado)
podAnnotations:
  sidecar.istio.io/inject: "true"

podSecurityContext: {}
securityContext: {}

# Recursos del contenedor
resources:
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 50m
    memory: 64Mi

# ============================================================================
# AUTOSCALING Y SCHEDULING
# ============================================================================
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80

nodeSelector: {}
tolerations: []
affinity: {}

# ============================================================================
# HEALTH CHECKS
# ============================================================================
# Configuración exacta del chart original
livenessProbe:
  enabled: true
  httpGet:
    path: /health
    port: 8080
  initialDelaySeconds: 30
  periodSeconds: 30
  timeoutSeconds: 5
  failureThreshold: 3

readinessProbe:
  enabled: true
  httpGet:
    path: /health
    port: 8080
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

# ============================================================================
# VARIABLES DE ENTORNO ADICIONALES
# ============================================================================
env:
  # Variables comunes (incluidas automáticamente)
  common:
    - name: POD_NAME
      valueFrom:
        fieldRef:
          fieldPath: metadata.name
    - name: POD_NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
  # Variables personalizadas adicionales (si se necesitan)
  custom: []

# ============================================================================
# CARACTERÍSTICAS DESHABILITADAS PARA ESTE MICROSERVICIO
# ============================================================================
configMap:
  enabled: false

secret:
  enabled: false

ingress:
  enabled: false